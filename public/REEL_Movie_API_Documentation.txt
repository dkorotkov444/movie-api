# REEL Movie API Documentation

This documentation describes the RESTful endpoints for the REEL Movie API, following the OpenAPI Specification format.

**Version:** 1.1.0 | **Last Updated:** September 23, 2025

***

### **`/`**

* **Description:** A welcome endpoint to confirm the API is running.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/`
* **Data returned:** A simple string message.

***

### **`/movies`**

* **Description:** Returns a list of all movies available in the database (titles only).
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies`
* **Data returned:** An array of movie titles (strings).

***

### **`/movies/complete`**

* **Description:** Returns a list of all movie objects in the database with their full details.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies/complete`
* **Data returned:** An array of movie objects.

***

### **`/movies/{title}`**

* **Description:** Returns a single movie object by its title.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies/{title}`
* **Path Parameters:**
    * `title`: The title of the movie to retrieve.
* **Data returned:** A movie object.

***

### **`/movies/genres/{genreName}`**

* **Description:** Returns a genre object with its name and description.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies/genres/{genreName}`
* **Path Parameters:**
    * `genreName`: The name of the genre (e.g., 'Sci-Fi', 'Crime').
* **Data returned:** A genre object.

***

### **`/movies/directors/{directorName}`**

* **Description:** Returns a director object with their bio and birth date.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies/directors/{directorName}`
* **Path Parameters:**
    * `directorName`: The name of the director (e.g., 'Quentin Tarantino').
* **Data returned:** A director object.

***

### **`/users`**

* **Description:**
    * **GET:** Returns a list of all users in the database.
    * **POST:** Registers a new user account with a provided username, password, email, and birth date.
* **Method Type:** GET, POST
* **Endpoint URL:** `http://localhost:8080/users`
* **Data returned:**
    * **GET:** An array of user objects.
    * **POST:** The newly created user object.
* **Request Body (for POST):**
    * **Data Format:** JSON
    * **Expected fields:** `{ "username": "string", "password": "string", "email": "string", "birth_date": "YYYY-MM-DD" }`

***

### **`/users/{username}`**

* **Description:**
    * **PATCH:** Updates an existing user's information (username, password, email, or birth date).
    * **DELETE:** Deregisters (deletes) a user from the database.
* **Method Type:** PATCH, DELETE
* **Endpoint URL:** `http://localhost:8080/users/{username}`
* **Path Parameters:**
    * `username`: The current username of the user.
* **Data returned:**
    * **PATCH:** The updated user object.
    * **DELETE:** A string confirming the deletion.
* **Request Body (for PATCH):**
    * **Data Format:** JSON
    * **Expected fields:** `{ "newUsername": "string", "newPassword": "string", "newEmail": "string", "newBirthDate": "YYYY-MM-DD" }`

***

### **`/users/{username}/{movieTitle}`**

* **Description:**
    * **PATCH:** Adds a movie to a user's list of favorite movies.
    * **DELETE:** Removes a movie from a user's list of favorite movies.
* **Method Type:** PATCH, DELETE
* **Endpoint URL:** `http://localhost:8080/users/{username}/{movieTitle}`
* **Path Parameters:**
    * `username`: The username of the account.
    * `movieTitle`: The title of the movie.
* **Data returned:** The updated user object with the modified favorites array.

***

### **`/movies/{title}/starring`**

* **Description:** Returns a list of all actors starring in a specific movie.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies/{title}/starring`
* **Path Parameters:**
    * `title`: The title of the movie.
* **Data returned:** An array of actors (strings).

***

### **`/movies/actors/{actorName}`**

* **Description:** Returns information about a specific actor.
* **Method Type:** GET
* **Endpoint URL:** `http://localhost:8080/movies/actors/{actorName}`
* **Path Parameters:**
    * `actorName`: The name of the actor.
* **Data returned:** A success message.
